<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<mapper namespace="com.ssafy.eatnote.model.dao.TrainerDao">

	<!-- 트레이너 정보 삽입 -->
    <insert id="insertTrainerDetails" parameterType="TrainerDetails">
        INSERT INTO trainer_details (
            user_id, 
            phone, 
            address, 
            gym_name, 
            gym_website, 
            certification_number,
            certification_image, 
            business_number, 
            introduction, 
            career,
            instagram_url, 
            is_verified
        ) VALUES (
            #{userId}, 
            #{phone}, 
            #{address}, 
            #{gymName}, 
            #{gymWebsite}, 
            #{certificationNumber},
            #{certificationImage}, 
            #{businessNumber}, 
            #{introduction}, 
            #{career},
            #{instagramUrl}, 
            #{isVerified}
        )
    </insert>
    
    <!-- 트레이너 상세 정보 조회 -->
	<select id="findByUserId" parameterType="long" resultType="TrainerDetails">
        SELECT
            user_id,
            phone,
            address,
            gym_name,
            gym_website,
            certification_number,
            certification_image,
            business_number,
            introduction,
            career,
            instagram_url,
            is_verified
        FROM trainer_details
        WHERE user_id = #{userId}
    </select>
    
    <!-- 트레이너 상세 정보 수정 -->
    <update id="updateTrainerDetails" parameterType="TrainerDetails">
	    UPDATE trainer_details
	    SET
	        phone = #{phone},
	        address = #{address},
	        gym_name = #{gymName},
	        gym_website = #{gymWebsite},
	        certification_number = #{certificationNumber},
	        certification_image = #{certificationImage},
	        business_number = #{businessNumber},
	        introduction = #{introduction},
	        career = #{career},
	        instagram_url = #{instagramUrl}
	    WHERE user_id = #{userId}
	</update>
    <select id="getFolloweeFeedbackSummary"
        parameterType="long"
        resultType="com.ssafy.eatnote.model.dto.response.FolloweeFeedbackSummary">
  SELECT
    u.user_id AS userId,
    u.nickname AS nickname,
    u.gender AS gender,
    u.profile_image AS profileImage,
    COUNT(CASE WHEN f.content IS NULL THEN 1 END) AS pendingCount,
    COUNT(CASE WHEN f.content IS NOT NULL THEN 1 END) AS writtenCount
  FROM user_follow fo
  JOIN users u ON fo.from_user_id = u.user_id
  LEFT JOIN meal m ON m.user_id = u.user_id
  LEFT JOIN meal_feedback f ON m.meal_id = f.meal_id AND f.trainer_id = #{trainerId}
  WHERE fo.to_user_id = #{trainerId}
    AND fo.status = 'ACCEPTED'
  GROUP BY u.user_id
</select>

    
</mapper>